/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/register/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cccerq%5C%5CDocuments%5C%5Clife%5C%5Cvolunteer-supabase-next%5C%5Capp%5C%5Cregister%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cccerq%5C%5CDocuments%5C%5Clife%5C%5Cvolunteer-supabase-next%5C%5Capp%5C%5Cregister%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/register/page.tsx */ \"(app-pages-browser)/./app/register/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NjZXJxJTVDJTVDRG9jdW1lbnRzJTVDJTVDbGlmZSU1QyU1Q3ZvbHVudGVlci1zdXBhYmFzZS1uZXh0JTVDJTVDYXBwJTVDJTVDcmVnaXN0ZXIlNUMlNUNwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLHdLQUFpSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzg0ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjY2VycVxcXFxEb2N1bWVudHNcXFxcbGlmZVxcXFx2b2x1bnRlZXItc3VwYWJhc2UtbmV4dFxcXFxhcHBcXFxccmVnaXN0ZXJcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cccerq%5C%5CDocuments%5C%5Clife%5C%5Cvolunteer-supabase-next%5C%5Capp%5C%5Cregister%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/invariant/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/invariant/browser.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (true) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pbnZhcmlhbnQvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLDBCQUEwQjtBQUNyRTtBQUNBO0FBQ0E7O0FBRUEsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanM/ZjFkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/invariant/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-input-mask/index.js":
/*!************************************************!*\
  !*** ./node_modules/react-input-mask/index.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("if (false) {} else {\n  module.exports = __webpack_require__(/*! ./lib/react-input-mask.development.js */ \"(app-pages-browser)/./node_modules/react-input-mask/lib/react-input-mask.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pbnB1dC1tYXNrL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw0S0FBaUU7QUFDbkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlucHV0LW1hc2svaW5kZXguanM/MTQ2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL3JlYWN0LWlucHV0LW1hc2sucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvcmVhY3QtaW5wdXQtbWFzay5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-input-mask/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-input-mask/lib/react-input-mask.development.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-input-mask/lib/react-input-mask.development.js ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = _interopDefault(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nvar reactDom = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\nvar invariant = _interopDefault(__webpack_require__(/*! invariant */ \"(app-pages-browser)/./node_modules/invariant/browser.js\"));\nvar warning = _interopDefault(__webpack_require__(/*! warning */ \"(app-pages-browser)/./node_modules/warning/warning.js\"));\n\nfunction _defaults2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\n\nfunction parseMask (mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n      formatChars = maskOptions.formatChars;\n\n  if (!character) {\n    return false;\n  }\n\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n\n    return value.length;\n  }\n\n  var filledLength = prefix.length;\n\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n\n  return filledLength;\n}\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n\n    return value;\n  }\n\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n\n  return value;\n}\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n\n    return maskChar;\n  }).join('');\n}\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (!isAllowed) {\n      return true;\n    }\n\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\n\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n      prefix = maskOptions.prefix,\n      lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n\n  newValue = previousValue;\n\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n\n  newValue = formatValue(maskOptions, newValue);\n\n  if (!enteredString) {\n    enteredString = null;\n  }\n\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\n\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\n\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\n\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n\n  return deferFn(fn);\n}\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\n\nvar InputElement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n\n  function InputElement(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n\n      return input;\n    };\n\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return null;\n      }\n\n      return input.value;\n    };\n\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return;\n      }\n\n      _this.value = value;\n      input.value = value;\n    };\n\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var input = _this.getInputDOMNode();\n\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n\n      if (!input || !isFocused) {\n        return;\n      }\n\n      var _options = options,\n          deferred = _options.deferred;\n\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n\n      return getInputSelection(input);\n    };\n\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n          mask = _this$maskOptions.mask,\n          maskChar = _this$maskOptions.maskChar,\n          permanents = _this$maskOptions.permanents,\n          formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          beforePasteState = _assertThisInitialize.beforePasteState;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          previousSelection = _assertThisInitialize2.previousSelection;\n\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n\n      var value = _this.getInputValue();\n\n      var previousValue = _this.value;\n\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n\n      _this.setInputValue(newValue);\n\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n          mask = _this$maskOptions2.mask,\n          prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n\n          var isInputValueChanged = newValue !== _this.getInputValue();\n\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n\n        _this.runSaveSelectionLoop();\n      }\n\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n\n      _this.stopSaveSelectionLoop();\n\n      _this.focused = false;\n\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n\n        var isInputValueChanged = newValue !== _this.getInputValue();\n\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n\n          if (!_this.focused) {\n            return;\n          }\n\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n\n        _this.setInputValue('');\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n\n    var _mask = props.mask,\n        _maskChar = props.maskChar,\n        _formatChars = props.formatChars,\n        _alwaysShowMask = props.alwaysShowMask,\n        _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    if (_value == null) {\n      _value = defaultValue;\n    }\n\n    var _newValue = getStringValue(_value);\n\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n\n        oldValue = getStringValue(oldValue);\n\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n\n        _newValue = modifiedValue.value;\n      }\n    }\n\n    _this.value = _newValue;\n    return _this;\n  }\n\n  var _proto = InputElement.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n        beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        mask = _this$props.mask,\n        maskChar = _this$props.maskChar,\n        formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n\n    var isSelectionChanged = false;\n\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n\n    this.stopSaveSelectionLoop();\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        mask = _this$props2.mask,\n        alwaysShowMask = _this$props2.alwaysShowMask,\n        maskChar = _this$props2.maskChar,\n        formatChars = _this$props2.formatChars,\n        inputRef = _this$props2.inputRef,\n        beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n        children = _this$props2.children,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n\n    var inputElement;\n     true ? warning( // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : 0;\n\n    if (children) {\n      !isFunction(children) ?  true ? invariant(false, 'react-input-mask: children must be a function') : 0 : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n\n      var childrenProps = _extends({}, restProps);\n\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ?  true ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : 0 : void 0;\n       true ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n\n  return InputElement;\n}(React.Component);\n\nmodule.exports = InputElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-input-mask/lib/react-input-mask.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/warning/warning.js":
/*!*****************************************!*\
  !*** ./node_modules/warning/warning.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = \"development\" !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLGFBQW9COztBQUVsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixXQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixXQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanM/ZTgxMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIF9fREVWX18gPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChfX0RFVl9fKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAxID8gbGVuIC0gMSA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDE7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMV0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KTtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHByaW50V2FybmluZy5hcHBseShudWxsLCBbZm9ybWF0XS5jb25jYXQoYXJncykpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/warning/warning.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/register/page.tsx":
/*!*******************************!*\
  !*** ./app/register/page.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Register; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_input_mask__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-input-mask */ \"(app-pages-browser)/./node_modules/react-input-mask/index.js\");\n/* harmony import */ var react_input_mask__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_input_mask__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction validateCPF(cpf) {\n    const str = cpf.replace(/\\D+/g, \"\");\n    if (str.length !== 11) return false;\n    if (/^(\\d)\\1{10}$/.test(str)) return false;\n    let sum = 0;\n    for(let i = 0; i < 9; i++)sum += parseInt(str[i]) * (10 - i);\n    let check = sum * 10 % 11;\n    if (check === 10) check = 0;\n    if (check !== parseInt(str[9])) return false;\n    sum = 0;\n    for(let i = 0; i < 10; i++)sum += parseInt(str[i]) * (11 - i);\n    check = sum * 10 % 11;\n    if (check === 10) check = 0;\n    if (check !== parseInt(str[10])) return false;\n    return true;\n}\nfunction Register() {\n    _s();\n    const daysOfWeek = [\n        \"segunda\",\n        \"ter\\xe7a\",\n        \"quarta\",\n        \"quinta\",\n        \"sexta\",\n        \"s\\xe1bado\",\n        \"domingo\"\n    ];\n    const unidades = [\n        \"Rio de Janeiro - CDD\",\n        \"Rio de Janeiro - Gard\\xeania\",\n        \"Amazonas\",\n        \"Cear\\xe1\"\n    ];\n    const maritalOptions = [\n        \"solteiro\",\n        \"casado\",\n        \"divorciado\",\n        \"vi\\xfavo\"\n    ];\n    const workshopsList = [\n        \"Organiza\\xe7\\xe3o bazar\",\n        \"Cozinha\",\n        \"Ajudante em oficina de L\\xedngua portuguesa\",\n        \"Ajudante em oficina de Matem\\xe1tica\",\n        \"Futebol\",\n        \"Bal\\xe9\",\n        \"De leitura\",\n        \"De letramento\",\n        \"Inform\\xe1tica\",\n        \"L\\xedngua inglesa\",\n        \"L\\xedngua espanhola\",\n        \"Artesanato\",\n        \"Ministrar oficina de lutas\",\n        \"Ajuda em eventos (Dia das m\\xe3es, pais, P\\xe1scoa, Natal, ...)\",\n        \"Outros (especificar)\"\n    ];\n    const rjUnits = [\n        \"Rio de Janeiro - CDD\",\n        \"Rio de Janeiro - Gard\\xeania\"\n    ];\n    const brazilStates = [\n        \"AC\",\n        \"AL\",\n        \"AP\",\n        \"AM\",\n        \"BA\",\n        \"CE\",\n        \"DF\",\n        \"ES\",\n        \"GO\",\n        \"MA\",\n        \"MT\",\n        \"MS\",\n        \"MG\",\n        \"PA\",\n        \"PB\",\n        \"PR\",\n        \"PE\",\n        \"PI\",\n        \"RJ\",\n        \"RN\",\n        \"RS\",\n        \"RO\",\n        \"RR\",\n        \"SC\",\n        \"SP\",\n        \"SE\",\n        \"TO\"\n    ];\n    const [form, setForm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        full_name: \"\",\n        cpf: \"\",\n        email: \"\",\n        phone: \"\",\n        religion: \"\",\n        marital_status: \"\",\n        unidade: \"\",\n        street: \"\",\n        number: \"\",\n        complement: \"\",\n        district: \"\",\n        city: \"\",\n        state: \"\",\n        cep: \"\",\n        hours_per_week: \"\",\n        days: [],\n        specialties: \"\",\n        about: \"\",\n        workshops: [],\n        workshop_other: \"\"\n    });\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const handleChange = (e)=>{\n        const { name, value, checked } = e.target;\n        if (name === \"days\" || name === \"workshops\") {\n            const arr = form[name] || [];\n            setForm({\n                ...form,\n                [name]: checked ? [\n                    ...arr,\n                    value\n                ] : arr.filter((v)=>v !== value)\n            });\n        } else {\n            setForm({\n                ...form,\n                [name]: value\n            });\n        }\n    };\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if (!form.days.length) {\n            setStatus(\"Selecione pelo menos um dia de atua\\xe7\\xe3o.\");\n            return;\n        }\n        if (!validateCPF(form.cpf)) {\n            setStatus(\"CPF inv\\xe1lido\");\n            return;\n        }\n        setStatus(\"Enviando…\");\n    // ... montagem do doc, geração do embedding e insert no Supabase ...\n    };\n    const baseInputClasses = \"\\n    block w-full rounded-lg border border-gray-300\\n    bg-white bg-opacity-80 px-4 py-3 placeholder-gray-500\\n    focus:outline-none focus:ring-2 focus:ring-green-500\\n    transition\\n  \";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center justify-center min-h-screen bg-cover bg-center\",\n        style: {\n            backgroundImage: \"url('/background.jpg')\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \" bg-white bg-opacity-70 backdrop-blur-lg shadow-xl rounded-2xl p-8 max-w-lg w-full mx-4 \",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                    className: \"text-3xl font-extrabold mb-6 text-center text-green-800\",\n                    children: \"Formul\\xe1rio de Volunt\\xe1rio\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                    lineNumber: 105,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                    onSubmit: handleSubmit,\n                    className: \"space-y-5\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            name: \"full_name\",\n                            value: form.full_name,\n                            onChange: handleChange,\n                            placeholder: \"Nome completo\",\n                            className: baseInputClasses,\n                            required: true\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 112,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_input_mask__WEBPACK_IMPORTED_MODULE_2___default()), {\n                            mask: \"999.999.999-99\",\n                            maskChar: null,\n                            name: \"cpf\",\n                            value: form.cpf,\n                            onChange: handleChange,\n                            children: (inputProps)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    ...inputProps,\n                                    placeholder: \"CPF (000.000.000-00)\",\n                                    className: baseInputClasses,\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 130,\n                                    columnNumber: 15\n                                }, this)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 122,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            name: \"email\",\n                            type: \"email\",\n                            value: form.email,\n                            onChange: handleChange,\n                            placeholder: \"seu@exemplo.com\",\n                            className: baseInputClasses,\n                            required: true\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 140,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            name: \"phone\",\n                            type: \"tel\",\n                            value: form.phone,\n                            onChange: handleChange,\n                            placeholder: \"99 9999-9999 ou 99 99999-9999\",\n                            pattern: \"^\\\\d{2}\\\\s\\\\d{4,5}-\\\\d{4}$\",\n                            title: \"Formato: 99 9999-9999 ou 99 99999-9999\",\n                            className: baseInputClasses,\n                            required: true\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 151,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            name: \"religion\",\n                            value: form.religion,\n                            onChange: handleChange,\n                            placeholder: \"F\\xe9 / Religi\\xe3o\",\n                            className: baseInputClasses,\n                            required: true\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 164,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                            name: \"marital_status\",\n                            value: form.marital_status,\n                            onChange: handleChange,\n                            className: baseInputClasses,\n                            required: true,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                    value: \"\",\n                                    children: \"Estado civil\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 181,\n                                    columnNumber: 13\n                                }, this),\n                                maritalOptions.map((opt)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: opt,\n                                        children: opt\n                                    }, opt, false, {\n                                        fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                        lineNumber: 183,\n                                        columnNumber: 15\n                                    }, this))\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 174,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                            name: \"unidade\",\n                            value: form.unidade,\n                            onChange: handleChange,\n                            className: baseInputClasses,\n                            required: true,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                    value: \"\",\n                                    children: \"Selecione a unidade\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 195,\n                                    columnNumber: 13\n                                }, this),\n                                unidades.map((u)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: u,\n                                        children: u\n                                    }, u, false, {\n                                        fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                        lineNumber: 197,\n                                        columnNumber: 15\n                                    }, this))\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 188,\n                            columnNumber: 11\n                        }, this),\n                        rjUnits.includes(form.unidade) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"fieldset\", {\n                            className: \"space-y-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"legend\", {\n                                    className: \"font-semibold text-gray-700\",\n                                    children: \"Oficinas\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 204,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-wrap gap-3\",\n                                    children: workshopsList.map((w)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"flex items-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"checkbox\",\n                                                    name: \"workshops\",\n                                                    value: w,\n                                                    checked: form.workshops.includes(w),\n                                                    onChange: handleChange,\n                                                    className: \"h-5 w-5 text-green-600\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                                    lineNumber: 208,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-gray-800\",\n                                                    children: w\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                                    lineNumber: 216,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, w, true, {\n                                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                            lineNumber: 207,\n                                            columnNumber: 19\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 205,\n                                    columnNumber: 15\n                                }, this),\n                                form.workshops.includes(\"Outros (especificar)\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    name: \"workshop_other\",\n                                    value: form.workshop_other,\n                                    onChange: handleChange,\n                                    placeholder: \"Especifique outras oficinas\",\n                                    className: \"\".concat(baseInputClasses, \" mt-2\")\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 221,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 203,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                            name: \"specialties\",\n                            value: form.specialties,\n                            onChange: handleChange,\n                            placeholder: \"Especialidades (separe por v\\xedrgula)\",\n                            className: \"\".concat(baseInputClasses, \" h-24 resize-none\")\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 233,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                            name: \"about\",\n                            value: form.about,\n                            onChange: handleChange,\n                            placeholder: \"Fale sobre voc\\xea\",\n                            className: \"\".concat(baseInputClasses, \" h-40 resize-y\"),\n                            required: true\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 242,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid grid-cols-2 gap-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    name: \"street\",\n                                    value: form.street,\n                                    onChange: handleChange,\n                                    placeholder: \"Rua\",\n                                    className: baseInputClasses,\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 253,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    name: \"number\",\n                                    value: form.number,\n                                    onChange: handleChange,\n                                    placeholder: \"N\\xfamero\",\n                                    className: baseInputClasses,\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 261,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    name: \"complement\",\n                                    value: form.complement,\n                                    onChange: handleChange,\n                                    placeholder: \"Complemento\",\n                                    className: baseInputClasses\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 269,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    name: \"district\",\n                                    value: form.district,\n                                    onChange: handleChange,\n                                    placeholder: \"Bairro\",\n                                    className: baseInputClasses,\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 276,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    name: \"city\",\n                                    value: form.city,\n                                    onChange: handleChange,\n                                    placeholder: \"Cidade\",\n                                    className: baseInputClasses,\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 284,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                    name: \"state\",\n                                    value: form.state,\n                                    onChange: handleChange,\n                                    className: baseInputClasses,\n                                    required: true,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"\",\n                                            children: \"UF\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                            lineNumber: 299,\n                                            columnNumber: 15\n                                        }, this),\n                                        brazilStates.map((uf)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: uf,\n                                                children: uf\n                                            }, uf, false, {\n                                                fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                                lineNumber: 301,\n                                                columnNumber: 17\n                                            }, this))\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 292,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_input_mask__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                    mask: \"99999-999\",\n                                    maskChar: null,\n                                    name: \"cep\",\n                                    value: form.cep,\n                                    onChange: handleChange,\n                                    children: (inputProps)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            ...inputProps,\n                                            placeholder: \"CEP (00000-000)\",\n                                            className: baseInputClasses,\n                                            required: true\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                            lineNumber: 312,\n                                            columnNumber: 17\n                                        }, this)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 304,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    name: \"hours_per_week\",\n                                    type: \"number\",\n                                    value: form.hours_per_week,\n                                    onChange: handleChange,\n                                    placeholder: \"Horas/semana\",\n                                    className: baseInputClasses,\n                                    min: 1,\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 320,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 252,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"fieldset\", {\n                            className: \"flex flex-wrap gap-3\",\n                            children: daysOfWeek.map((d)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"flex items-center gap-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"checkbox\",\n                                            name: \"days\",\n                                            value: d,\n                                            checked: form.days.includes(d),\n                                            onChange: handleChange,\n                                            className: \"h-5 w-5 text-green-600\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                            lineNumber: 336,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-gray-800 capitalize\",\n                                            children: d\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                            lineNumber: 344,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, d, true, {\n                                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                                    lineNumber: 335,\n                                    columnNumber: 15\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 333,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"submit\",\n                            className: \" w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-3 rounded-lg shadow-md transition \",\n                            children: \"Enviar\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                            lineNumber: 350,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                    lineNumber: 109,\n                    columnNumber: 9\n                }, this),\n                status && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"mt-4 text-center text-lg font-medium text-gray-700\",\n                    children: status\n                }, void 0, false, {\n                    fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n                    lineNumber: 363,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n            lineNumber: 101,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\ccerq\\\\Documents\\\\life\\\\volunteer-supabase-next\\\\app\\\\register\\\\page.tsx\",\n        lineNumber: 97,\n        columnNumber: 5\n    }, this);\n}\n_s(Register, \"e0HrZ52uUgYXzlCo+GXa5QAaVcw=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/register/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MjVhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Cccerq%5C%5CDocuments%5C%5Clife%5C%5Cvolunteer-supabase-next%5C%5Capp%5C%5Cregister%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);